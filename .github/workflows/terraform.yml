name: Terraform CI/CD

on:
  push:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0

    - name: Configure AWS Credentials
      run: |
        echo "Setting AWS credentials..."
        echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
        echo "AWS_REGION=eu-central-1" >> $GITHUB_ENV

    - name: Ensure S3 Bucket Exists
      run: |
        if ! aws s3 ls "s3://devops-resume-shimon-1b4c1f44" 2>/dev/null; then
          echo "S3 bucket does not exist. Creating..."
          aws s3 mb s3://devops-resume-shimon-1b4c1f44
        else
          echo "S3 bucket already exists."
        fi

    - name: Ensure DynamoDB Table Exists
      run: |
        if ! aws dynamodb describe-table --table-name terraform-lock --region us-east-1 2>/dev/null; then
          echo "DynamoDB table does not exist. Creating..."
          aws dynamodb create-table \
          --table-name terraform-lock \
          --attribute-definitions AttributeName=LockID,AttributeType=S \
          --key-schema AttributeName=LockID,KeyType=HASH \
          --billing-mode PAY_PER_REQUEST \
          --region us-east-1
        else
          echo "DynamoDB table already exists."
        fi

    - name: Terraform Format
      run: terraform fmt -recursive

    - name: Terraform Format
      run: terraform fmt -check

    - name: Terraform Init
      run: terraform init

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      run: terraform plan

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main'
      run: terraform apply -auto-approve tfplan

